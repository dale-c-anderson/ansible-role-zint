---
- set_fact:
    zint_local_source_base: /usr/local/src/zint

- name: Set zint version if not defined by sending a request to SourceForge
  # https://sourceforge.net/projects/zint/best_release.json
  uri:
    url: "https://sourceforge.net/projects/zint/best_release.json"
    return_content: yes
  register: zint_version_result
  when: zint_version is not defined

- set_fact:
    # version can be grabbed from release.filename, which looks like /zint/<version>/zint-<version>-src.tar.gz
    zint_version: "{{ zint_version_result.json.release.filename.split('/')[2] }}"
    zint_source_checksum: "md5:{{ zint_version_result.json.release.md5sum }}"
  when: zint_version is not defined

- name: Set source URL if not defined
  set_fact:
    zint_source: "https://sourceforge.net/projects/zint/files/zint/{{ zint_version }}/zint-{{ zint_version }}-src.tar.gz/download"
  when: zint_source is not defined

- set_fact:
    zint_local_source_gz: "{{ zint_local_source_base }}/zint-{{ zint_version }}.tar.gz"
    zint_local_source_dir: "{{ zint_local_source_base }}/zint-{{ zint_version }}-src"

- name: Check whether Zint {{ zint_version }} has been downloaded
  stat:
    path: "{{ zint_local_source_gz }}"
  register: zint_stat

- name: Print a debug message if Zint {{ zint_version }} has not been downloaded
  debug:
    msg: "Zint doesn't exist"
  when: zint_stat.stat.isreg is not defined

- name: Print a debug message if Zint {{ zint_version }} has been downloaded
  debug:
    msg: "Zint exists"
  when: zint_stat.stat.isreg is defined and zint_stat.stat.isreg

- name: Install Zint {{ zint_version }}
  when: zint_stat.stat.isreg is not defined
  block:
    - name: Install Zint pre-requisites
      apt:
        name:
          - 'g++'
          - cmake
          - zlib1g-dev
          - libpng-dev
        state: present
        update_cache: yes

    - name: Create a dir for the Zint source code
      file:
        state: directory
        path: "{{ zint_local_source_base }}"
        recurse: true

    - name: Download Zint {{ zint_version }} source code
      get_url:
        url: "{{ zint_source }}"
        dest: "{{ zint_local_source_gz }}"
        checksum: "{{ zint_source_checksum }}"

    - name: Extract Zint {{ zint_version }} source code
      unarchive:
        remote_src: true
        src: "{{ zint_local_source_gz }}"
        dest: "{{ zint_local_source_base }}/"
        creates: "{{ zint_local_source_dir }}/"
        owner: root
        group: root

    - name: Create Zint {{ zint_version }}'s makefile
      shell: /usr/bin/cmake .
      args:
        chdir: "{{ zint_local_source_dir }}"
        creates: "{{ zint_local_source_dir }}/CMakeFiles/Makefile.cmake"
      register: cmake_result

    - name: Build Zint {{ zint_version }}
      make:
        chdir: "{{ zint_local_source_dir }}/"
      when: cmake_result.changed

    - name: Install Zint {{ zint_version }}
      make:
        chdir: "{{ zint_local_source_dir }}/"
        target: install
      when: cmake_result.changed

    - name: Uninstall Zint pre-requisites
      apt:
        name:
          - 'g++'
          - cmake
          - zlib1g-dev
          - libpng-dev
        state: absent
